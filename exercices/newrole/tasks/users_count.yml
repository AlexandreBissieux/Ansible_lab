---
# play which gives the uid of the new user

- name: Get all users info
  getent:
    database: passwd
    split: ":"

- name: Create a list of uid
  set_fact:
    unique_list: "{{ (unique_list | default([]) + [item]) | unique | map('int')}}"
  loop: "{{ getent_passwd | dict2items | map(attribute='value') | map(attribute='1') }}"

- name: Get greater value from the list
  set_fact:
    result_users: "{{ unique_list | reject('ge', 3999) | list | max }}"

- name: Calculate final value if result is equal or greater than 3000
  set_fact:
    result_users: "{{ result_users | int +1 }}"
  when: " (result_users | int >= 3000 and result_users | int <= 3999) "

- name: Calculate final value if result is lower than 3000
  set_fact:
    result_users: 3000
  when: " result_users | int < 3000 "

- name: Send error message if uid range is exceeded on remote host
  debug:
    msg: "Error ! Valid uid range exceeded, uid calculated : {{ result_users }}, resetting the value..."
  when: " result_users | int > 3999 "

- name: Reset value of result_users to interrupt execution
  set_fact:
    result_groups: null
  when: " result_users | int > 3999 "  

- name: Print the value
  debug:
    msg: "The index of the greatest number in the list is {{ result_users }}"